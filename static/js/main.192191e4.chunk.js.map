{"version":3,"sources":["redux/reducers/reducerLogin.ts","redux/reducers/reducerWallet.ts","redux/reducers/index.ts","redux/store/store.ts","images/wallet.svg","redux/actions/index.ts","pages/Login.tsx","images/wallet-page.svg","components/Header.tsx","components/Table.tsx","services/fetch.ts","images/gifWallet.gif","components/Form.tsx","pages/Wallet.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["INITIAL_STATE","email","reducerLogin","state","action","type","payload","expenses","editSwitch","idEdit","filter","element","id","rootReducer","combineReducers","reducerWallet","store","createStore","composeWithDevTools","applyMiddleware","thunk","actionLogin","Login","useState","setEmail","history","useHistory","password","setPassword","dispatch","useDispatch","className","style","width","src","loginWallet","alt","placeholder","onChange","target","value","disabled","test","length","onClick","push","Header","useSelector","shallowEqual","role","href","walletPage","reduce","accu","curr","data","currency","ask","toFixed","connect","onClickDelete","actionDelete","toast","error","map","description","method","tag","name","split","parseFloat","marginLeft","actEdit","a","fetch","response","json","fetchApi","Form","estados","onClickAdd","setCurrency","setValue","setDescription","setMethod","setTag","htmlFor","Number","marginTop","Object","keys","Wallet","setData","setId","onStartPage","useEffect","objExpenses","setToState","undefined","gifWallet","position","prevState","success","Routes","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.192191e4.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  email: '',\n};\n\ntype TReducerLogin = {\n  type: string,\n  payload: {\n    email: string,\n  }\n}\n\ntype TInicialState = {\n  email: string,\n}\n\nconst reducerLogin = (state: TInicialState = INITIAL_STATE,\n  action: TReducerLogin): {email: string} => {\n  switch (action.type) {\n    case 'ACTION_LOGIN':\n      return {\n        ...state,\n        email: action.payload.email,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerLogin;\n","import { RootStateOrAny } from 'react-redux';\n\nconst INITIAL_STATE = {\n  expenses: [],\n  editSwitch: false,\n  idEdit: 0,\n};\n\ntype InitialState = {\n  expenses: Array<[]>,\n  idEdit: number,\n  editSwitch: boolean,\n}\n\ntype ActionPayload = {\n  type: string,\n  id: number,\n  payload: {\n    expenses: Array<[]>,\n  }\n}\n\nconst reducerLogin = (state: InitialState = INITIAL_STATE,\n  action: ActionPayload): {expenses: Array<[][]>,\n    idEdit: number, editSwitch: boolean} => {\n  switch (action.type) {\n    case 'ADD_EXPENSES':\n      return {\n        ...state,\n        expenses: [...state.expenses, action.payload.expenses],\n      };\n    case 'DELETE_EXPENSES':\n      return {\n        ...state,\n        expenses: state.expenses\n          .filter((element: RootStateOrAny) => element.id !== action.id),\n      };\n    case 'ACTION_EDIT':\n      return {\n        ...state,\n        idEdit: action.id,\n        editSwitch: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducerLogin;\n","import { combineReducers } from 'redux';\nimport reducerLogin from './reducerLogin';\nimport reducerWallet from './reducerWallet';\n\nconst rootReducer = combineReducers({\n  reducerLogin,\n  reducerWallet,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/wallet.8689e39f.svg\";","const actionLogin = (email: string): {type: string, payload: {email: string}} => ({\n  type: 'ACTION_LOGIN',\n  payload: {\n    email,\n  },\n});\n\nexport const actionDelete = (id:number): {type: string, id:number} => ({\n  type: 'DELETE_EXPENSES',\n  id,\n});\n\ntype TExpenses = {\n  value: number,\n  id: number,\n  description: string,\n  currency: string,\n  data: unknown,\n  method: string,\n  tag: string,\n}\n\nexport const addExpenses = (expenses:\n  TExpenses): {type:string, payload:{expenses: TExpenses}} => ({\n  type: 'ADD_EXPENSES',\n  payload: {\n    expenses,\n  },\n});\n\nexport const actEdit = (id: number): {type: string, id: number } => ({\n  type: 'ACTION_EDIT',\n  id,\n});\n\nexport default actionLogin;\n","import React, { useState, FunctionComponent, ReactElement } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport loginWallet from '../images/wallet.svg';\nimport actionLogin from '../redux/actions';\n\nconst Login: FunctionComponent = (): ReactElement => {\n  const [email, setEmail] = useState<string>('');\n  const history = useHistory();\n  const [password, setPassword] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const onClickLogin = (): void => {\n    dispatch(actionLogin(email));\n    history.push('/carteira');\n  };\n\n  const validateEmailAndPassword = (): boolean => {\n    const validationEmail = /(.*)@(.*).com/;\n    const PASSWORD_LENGTH = 6;\n    if (validationEmail.test(email)\n    && password.length >= PASSWORD_LENGTH) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <section className=\"hero is-light  is-fullheight\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <div className=\"column is-4 is-offset-4\">\n            <h3 className=\"title has-text-black\">Login</h3>\n            <hr className=\"login-hr\" />\n            <p className=\"subtitle has-text-black\">Please login to proceed.</p>\n            <div className=\"box\">\n              <figure className=\"avatar\">\n                <img\n                  style={{ width: '130px' }}\n                  src={loginWallet}\n                  alt=\"login wallet\"\n                />\n              </figure>\n              <form>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input is-large\"\n                      type=\"email\"\n                      placeholder=\"Your Email\"\n                      onChange={({ target }) => setEmail(target.value)}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input is-large\"\n                      type=\"password\"\n                      placeholder=\"Your Password\"\n                      onChange={({ target }) => setPassword(target.value)}\n                    />\n                  </div>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"button is-block is-info is-large is-fullwidth\"\n                  disabled={validateEmailAndPassword()}\n                  onClick={() => onClickLogin()}\n                >\n                  Login\n                  <i className=\"fa fa-sign-in\" aria-hidden=\"true\" />\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/wallet-page.ed9ea66e.svg\";","import React, { ReactElement } from 'react';\nimport { RootStateOrAny, shallowEqual, useSelector } from 'react-redux';\nimport walletPage from '../images/wallet-page.svg';\n\ntype State = {\n  reducerLogin: {\n    email: string,\n  },\n}\n\nconst Header: React.FC = (): ReactElement => {\n  const { email } = useSelector((state:State) => state.reducerLogin);\n  const { expenses } = useSelector((state:RootStateOrAny) => state.reducerWallet,\n    shallowEqual);\n  const sumExpenses = (): number => {\n    if (expenses.length !== 0) {\n      const sum = expenses.reduce((accu: number, curr: RootStateOrAny) => {\n        accu += curr.data[curr.currency].ask * curr.value;\n        return accu;\n      }, 0);\n      return sum.toFixed(2);\n    }\n    return 0;\n  };\n  return (\n    <nav className=\"navbar is-light\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item\" href=\"/login\">\n          <img src={walletPage} alt=\"walletIcon\" />\n        </a>\n        <h1 className=\"navbar-item title\">TrybeWallet</h1>\n      </div>\n      <div className=\"navbar-menu\">\n        <h3 className=\"subtitle is-4 navbar-item \">\n          {`Total de despesas: ${sumExpenses()}`}\n        </h3>\n      </div>\n      <div className=\"navbar-menu\">\n        <p className=\"navbar-item navbar-end\">{`Email: ${email}`}</p>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { ReactElement } from 'react';\nimport {\n  RootStateOrAny, useSelector, connect, shallowEqual, useDispatch,\n} from 'react-redux';\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\nimport toast from 'react-hot-toast';\nimport { actionDelete, actEdit } from '../redux/actions';\n\nconst Table: React.FC = (): ReactElement => {\n  const { expenses } = useSelector((state:RootStateOrAny) => state.reducerWallet,\n    shallowEqual);\n  const dispatch = useDispatch();\n  const deleteNotify = (): string => toast.error('Despesa excluida');\n  const onClickDelete = (id: number): void => {\n    dispatch(actionDelete(id));\n    deleteNotify();\n  };\n  const onClickEdit = (id: number): void => {\n    dispatch(actEdit(id));\n  };\n\n  if (expenses.length === 0) {\n    return (\n      <h3>Não possui despesas cadastradas</h3>\n    );\n  }\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Valor</th>\n          <th>Descrição</th>\n          <th>Moeda</th>\n          <th>Método de pagamento</th>\n          <th>Tag</th>\n          <th>Câmbio utilizado</th>\n          <th>Moeda de conversão</th>\n          <th>Valor convertido</th>\n          <th>Real</th>\n          <th>Editar/Excluir</th>\n        </tr>\n      </thead>\n      <tbody>\n        {expenses.map((element: RootStateOrAny) => (\n          <tr key={element.id}>\n            <td>{element.value}</td>\n            <td>{element.description}</td>\n            <td>{element.currency}</td>\n            <td>{element.method}</td>\n            <td>{element.tag}</td>\n            <td>{element.data[element.currency].name.split('/')[0]}</td>\n            <td>{parseFloat(element.data[element.currency].ask).toFixed(2)}</td>\n            <td>{(element.data[element.currency].ask * element.value).toFixed(2)}</td>\n            <td>Real</td>\n            <div style={{ marginLeft: '15px' }}>\n              <button\n                type=\"button\"\n                className=\"button is-warning\"\n                onClick={() => onClickEdit(element.id)}\n              >\n                <AiOutlineEdit />\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => onClickDelete(element.id)}\n                className=\"button is-danger\"\n              >\n                <AiOutlineDelete />\n              </button>\n            </div>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny): RootStateOrAny => ({\n  expenses: state.reducerWallet,\n});\n\nexport default connect(mapStateToProps)(Table);\n","async function fetchApi<T>(): Promise<T> {\n  const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const data = await response.json();\n  return data;\n}\n\nexport default fetchApi;\n","export default __webpack_public_path__ + \"static/media/gifWallet.425b1e82.gif\";","import React, {\n  Dispatch, PropsWithChildren, ReactElement, SetStateAction,\n} from 'react';\n\ntype TPropsFromWallet = {\n  estados: {\n    setCurrency: Dispatch<SetStateAction<string>>,\n    setValue: Dispatch<SetStateAction<number>>,\n    setDescription: Dispatch<SetStateAction<string>>,\n    setTag: Dispatch<SetStateAction<string>>,\n    setMethod: Dispatch<SetStateAction<string>>,\n  },\n  currency: {\n  },\n  onClickAdd: PropsWithChildren<()=> void>;\n}\n\nconst Form: React.FC<TPropsFromWallet> = ({\n  estados,\n  currency,\n  onClickAdd,\n}): ReactElement => {\n  const {\n    setCurrency, setValue, setDescription, setMethod, setTag,\n  } = estados;\n  const method: Array<string> = ['Dinheiro', 'Cartão de Crédito', 'Cartão de débito'];\n  const tag: Array<string> = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n  return (\n    <div>\n      <form className=\"level-left\">\n        <label className=\"label\" htmlFor=\"value\">\n          Valor\n          <div className=\"control\">\n            <input\n              type=\"number\"\n              className=\"input\"\n              style={{ width: '100px' }}\n              onChange={({ target }) => setValue(Number(target.value))}\n            />\n          </div>\n        </label>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"description\" style={{ marginTop: '5px' }}>\n            Descrição\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"description\"\n                onChange={({ target }) => setDescription(target.value)}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"asad\" className=\"label\" style={{ marginTop: '5px' }}>\n            Moeda\n            <div className=\"control\">\n              <div className=\"select\">\n                <select\n                  name=\"currency\"\n                  onChange={({ target }) => setCurrency(target.value)}\n                >\n                  {Object.keys(currency)\n                    .filter((element) => element !== 'USDT')\n                    .map((element) => (\n                      <option>{element}</option>\n                    ))}\n                </select>\n              </div>\n            </div>\n          </label>\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"asad\" className=\"label\" style={{ marginTop: '5px' }}>\n            Método de pagamento\n            <div className=\"control\">\n              <div className=\"select\">\n                <select\n                  onChange={({ target }) => setMethod(target.value)}\n                >\n                  {method.map((element) => (\n                    <option>{element}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </label>\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"asad\" className=\"label\" style={{ marginTop: '6px' }}>\n            Tag\n            <div className=\"control\">\n              <div className=\"select\">\n                <select\n                  onChange={({ target }) => setTag(target.value)}\n                >\n                  {tag.map((element) => (\n                    <option key={element}>{element}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </label>\n        </div>\n        <button\n          type=\"button\"\n          className=\"button is-primary\"\n          onClick={() => onClickAdd()}\n          style={{ marginLeft: '17px', marginTop: '15px' }}\n        >\n          Adicionar despesa\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, {\n  ReactElement, useState, useEffect, Dispatch, SetStateAction,\n} from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { addExpenses } from '../redux/actions';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\nimport fetchApi from '../services/fetch';\nimport gifWallet from '../images/gifWallet.gif';\nimport Form from '../components/Form';\n// import ModalEdit from '../components/ModalEdit';\n\nconst Wallet: React.FC = (): ReactElement => {\n  const [data, setData] = useState<undefined>();\n  const [value, setValue] = useState<number>(0);\n  const [id, setId] = useState<number>(0);\n  const [description, setDescription] = useState<string>('');\n  const [currency, setCurrency] = useState<string>('');\n  const [method, setMethod] = useState('');\n  const [tag, setTag] = useState('');\n  const dispatch = useDispatch();\n  const notify = (): string => toast.success('Despesa adicionada com sucesso');\n  const onStartPage = async (): Promise<void> => {\n    setData(await fetchApi());\n  };\n  useEffect(() => {\n    onStartPage();\n  }, []);\n\n  const objExpenses = {\n    value,\n    id,\n    description,\n    currency,\n    data,\n    method,\n    tag,\n  };\n\n  const onClickAddExpenses = (): void => {\n    setId((prevState) => (prevState + 1));\n    dispatch(addExpenses(objExpenses));\n    notify();\n  };\n\n  type TSetToState = {\n    setValue: Dispatch<SetStateAction<number>>,\n    setCurrency: Dispatch<SetStateAction<string>>,\n    setDescription: Dispatch<SetStateAction<string>>,\n    setMethod: Dispatch<SetStateAction<string>>,\n    setTag: Dispatch<SetStateAction<string>>,\n  }\n\n  const setToState: TSetToState = {\n    setValue,\n    setCurrency,\n    setDescription,\n    setMethod,\n    setTag,\n  };\n  if (data === undefined) {\n    return (\n      <img\n        src={gifWallet}\n        alt=\"gifWallet\"\n      />\n    );\n  }\n  return (\n    <div>\n      <Header />\n      {/* <ModalEdit currency={data} /> */}\n      <Toaster position=\"top-right\" />\n      <Form estados={setToState} currency={data} onClickAdd={onClickAddExpenses} />\n      <Table />\n    </div>\n  );\n};\n\nexport default Wallet;\n","import React, { ReactElement, FunctionComponent } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nconst Routes: FunctionComponent = (): ReactElement => (\n  <div>\n    <Switch>\n      <Route path=\"/carteira\" component={Wallet} />\n      <Route path=\"/\" component={Login} />\n    </Switch>\n  </div>\n);\n\nexport default Routes;\n","import React, { ReactElement } from 'react';\nimport Routes from './Routes';\nimport './App.css';\n\nconst App: React.FC = (): ReactElement => (\n  <div>\n    <Routes />\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nreportWebVitals();\n"],"sourceRoot":""}